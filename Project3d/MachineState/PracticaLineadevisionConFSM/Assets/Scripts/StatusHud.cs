using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class StatusHud : Status
{
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Variables públicas propias de esta clase
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    public CommandUpdateAllHud commandUpdateAllHud_; ///comandos comunes
    public CommandUpdateHealthHud commandUpdateHealthHud_; ///comandos comunes
    

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Variables privadas propias de esta clase
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     
    [SerializeField] private Text  hudTextHealthPlayer_;



 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Métodos Sobreescritos
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Eventos  de esta clase
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
        /// <summary>
    /// Awake is called when the script instance is being loaded.
    /// </summary>
    public new void Awake()
    {
        base.Awake();
        InstaciateCommands();     
        SetName("StatusHud");        
        Debug.Log("|||||||||||||| Awake StatusHud||||||||||||||||");

    }
   public new void Start()
    {
        Debug.Log("|||||||||||||| Start StatusHud||||||||||||||||");
        if (GetTarget()== null)
            SetTarget(GameObject.Find("Hud")); ///si no se ha establecido un objeto destino, por defecto para el
            ///gameobject que contendrá el HUD sera el gameobject con etiqueta "Hud"
        AppendCommand(commandUpdateAllHud_); ///se ejecutará en el primer Update() de GameManager
    }    
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Funciones exclusivas  de esta clase
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
    private void InstaciateCommands()
    {
        
        commandUpdateAllHud_ = new CommandUpdateAllHud();
        commandUpdateHealthHud_ = new CommandUpdateHealthHud();
    

    }    
    public string GetHudHealth()
    {
        return hudTextHealthPlayer_.text;
    }
    public void SetHudHealthPlayer(float drat)
    {
        hudTextHealthPlayer_.text = drat.ToString() + " %";
    }




}
